= decimal =
Our basic base 10 number system

= binary =
base 2 number system; each digit represents a power of the base (i.e. 2)
consider base 10 - expressing 567 can be in the form of:

5 * 10^2^ + 6 * 10^1^ + 7 * 10^0^

as such, the same can be applied for binary in base 2. Adding, subtracting and dividing binary is 
also self explanitory.

== operations on binary ==
1011 (11) + 0001 (1) = 1100 (12)

1101 / 10 = 110 r 1
Division can be used to convert numbers to binary; you find hte *least significant bit* (lsb) which is the rightmost
digit while the leftmost digit is the *most significant bit* (rsb)

12 (1100)

12 / 2 = 6 r 0
6  / 2 = 3 r 0
3  / 2 = 1 r 1
1  / 2 = 0 r 1

reading from bottom to top you get 1100 - our binary representation of 12

= hex =
hex goes by the same logic as binary, just that it is base 16 - we can't represent 10-15 proper digits, so we use A-F
instead. same conversion from from decimal to binary also applies:

589 (base 10) to hex

589 / 16 = 36 r 13 = D
36  / 16 = 2  r 4
2   / 16 = 0  r 2

thus 589 = 24D (hex)

to convert hex to binary, simply take each digit and convert it to a 4 bit binary number:
24D:
2 = 0010
4 = 0100
D = 1011

thus, 24D (hex) = 0010 0100 10011 (bin)
